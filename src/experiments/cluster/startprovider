#!/usr/bin/python3.8
import os
import re
import subprocess

def is_root():
    """Check if the script is run as root."""
    return os.geteuid() == 0

def validate_ip(ip_address):
    """Validate IP address format."""
    pattern = re.compile(r'^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$')
    return pattern.match(ip_address) is not None

def validate_number(input_string):
    """Validate if the input string is a positive integer."""
    return input_string.isdigit()

def module_loaded(module_name):
    """Check if a given module is loaded."""
    result = subprocess.run(['lsmod'], capture_output=True, text=True)
    return module_name in result.stdout

def mount_exists(mount_point):
    """Check if the mount point already exists."""
    result = subprocess.run(['mount'], capture_output=True, text=True)
    return mount_point in result.stdout

def create_ramdisk(size_gb, ramdisk_path):
    """Create a ramdisk."""
    if not mount_exists(ramdisk_path):
        os.makedirs(ramdisk_path, exist_ok=True)
        subprocess.run(['mount', '-t', 'tmpfs', '-o', f'size={size_gb}G', 'tmpfs', ramdisk_path], check=True)
        print(f"Ramdisk created at {ramdisk_path} with size {size_gb} GB.")
    else:
        print(f"Ramdisk at {ramdisk_path} already exists.")

def main(size_gb, ip_address, ramdisk_path='/mnt/ramdisk'):
    if not is_root():
        print("This script must be run as root.")
        exit(1)

    if not validate_number(size_gb) or not validate_ip(ip_address):
        print("Invalid input parameters.")
        exit(1)

    if not module_loaded('rpcrdma'):
        print("RDMA module is not loaded. Attempting to load...")
        subprocess.run(['modprobe', 'rpcrdma'], check=True)
        if module_loaded('rpcrdma'):
            print("RDMA module loaded successfully.")
        else:
            print("Failed to load RDMA module.")
            exit(1)
    else:
        print("RDMA Ready")

    create_ramdisk(size_gb, ramdisk_path)

    # Add your NFS export and permissions setup here as needed

if __name__ == "__main__":
    import sys
    if len(sys.argv) != 3:
        print("Usage: python script.py <size in GB> <IP address>")
        exit(1)
    main(sys.argv[1], sys.argv[2])
